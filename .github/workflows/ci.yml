name: "Continuous Integration"

on:
  push:
    branches: 
      - main

  pull_request:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

jobs:
  dependencies:
    runs-on: ubuntu-latest
    name: "Install Dependencies"
    steps:
      - uses: actions/checkout@v3

      - name: Setup node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: 'current'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

  typescript-build:
    needs: [dependencies]
    runs-on: ubuntu-latest
    name: "TypeScript build"
    steps:
      - uses: actions/checkout@v3

      - name: Setup node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: 'current'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-
      
      # To build it for github pages, we might aswell configure it here
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
        with:
          static_site_generator: next  
          generator_config_file: apps/website/next.config.js      

      
      - name: Add custom Problem Matchers
        run: |
          echo ::add-matcher::.github/problem-matchers/tsc.json   

      - name: Install dependencies 
        run: yarn install --immutable

      - name: Run Build
        # run: yarn build
        run: yarn turbo run build:ci --cache-dir=".turbo"
        
      # Upload website artifact
      - name: Upload website artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: apps/website/out


  eslint:
    needs: [dependencies]
    runs-on: ubuntu-latest
    name: "ESLint"
    steps:
      - uses: actions/checkout@v3

      - name: Setup node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: 'current'
          cache: 'yarn'
          cache-dependency-path: yarn.lock
            
      - name: Add custom Problem Matchers
        run: |
          echo ::add-matcher::.github/problem-matchers/eslint-compact.json   
          echo ::add-matcher::.github/problem-matchers/eslint-stylish.json   

      - name: Install dependencies 
        # if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn install --immutable

      - name: Run ESLint
        run: yarn turbo run lint --cache-dir=".turbo"

  tests:
    runs-on: ubuntu-latest
    name: "Tests"
    needs: [typescript-build]
    steps:
      - uses: actions/checkout@v3

      - name: Setup node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: 'current'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.ref_name }}-

      - name: Install dependencies 
        # if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn install --immutable

      # Actually run the tests (part of the test stage requires the build)
      - name: Run Tests
        run: yarn turbo run test:ci --cache-dir=".turbo"
  
  npm-publish:
    needs: [typescript-build, eslint, tests]
    if: ${{ github.repository_owner == 'RiskyMH' }} && ${{ github.ref == 'refs/heads/main' }}
    name: NPM Publish
    strategy:
      fail-fast: false
      matrix:
        include:
          - package: '@riskybot/tools'
            folder: 'tools'
          - package: '@riskybot/command'
            folder: 'command'
          - package: '@riskybot/apis'
            folder: 'apis'
          - package: '@riskybot/image-generate'
            folder: 'image-generation'
          - package: 'discord-api-parser'
            folder: 'discord-api-parser'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install node.js v16
        uses: actions/setup-node@v3
        with:
          node-version: 'current'
          registry-url: https://registry.npmjs.org/
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn --immutable

      - name: Turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.ref_name }}-

      # Should be fast as this is requiring the ts build to succeed (and thus having cache)
      - name: Run Build
        run: yarn turbo run build:ci --cache-dir=".turbo" && yarn tsc --build

      - name: Delete contents in dist/
        run: rm -rf packages${{ matrix.package }}/dist/*
        
      - name: Run local build for package
        run: yarn workspace ${{ matrix.package }} build

      - name: Publish package
        run: |
          yarn workspace ${{ matrix.package }} npm publish || true
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

  deploy-commands:
    needs: [typescript-build, eslint, tests]
    if: ${{ github.repository_owner == 'RiskyMH' }} && ${{ github.ref == 'refs/heads/main' }}
    name: Deploy Commands

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install node.js v16
        uses: actions/setup-node@v3
        with:
          node-version: 'current'
          registry-url: https://registry.npmjs.org/
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn --immutable

      - name: Turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo${{ github.ref_name }}-


      # Should be fast as this is requiring the ts build to succeed (and thus having cache)
      - name: Run Build
        run: yarn turbo run build:ci --cache-dir=".turbo" && yarn tsc --build

      - name: Deploy
        run: yarn deploy-commands
        env:
          RISKYBOT_APPLICATION_CLIENT_SECRET: ${{ secrets.RISKYBOT_APPLICATION_CLIENT_SECRET }}
          RISKYBOT_APPLICATION_ID: ${{ secrets.RISKYBOT_APPLICATION_ID }}
          OWNER_GUILD_ID: ${{ secrets.OWNER_GUILD_ID }}
          IMGEN_APPLICATION_CLIENT_SECRET: ${{ secrets.IMGEN_APPLICATION_CLIENT_SECRET }}
          IMGEN_APPLICATION_ID: ${{ secrets.IMGEN_APPLICATION_ID }}

          TOPGG_TOKEN: ${{ secrets.TOPGG_TOKEN }}
      

  github-pages-deploy:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [typescript-build, eslint, tests]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
