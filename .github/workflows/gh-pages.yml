name: Github Pages

on:
  push:
    branches:
      - main  # Set a branch to deploy
    paths:
      - "website/**"
  pull_request:
    paths:
      - "website/**"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    name: Build Website
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: website

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: 'current'
          cache: 'yarn'
          cache-dependency-path: ${{ github.workspace }}/yarn.lock

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
        with:
          static_site_generator: next  
          generator_config_file: website/next.config.js      
          
      - uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: ${{ github.workspace }}/website/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - name: Install dependencies
        run: yarn --immutable
        
      - name: Build with Next.js
        run: yarn next build

      - name: Static HTML export with Next.js
        run: yarn next export 

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ github.workspace }}/website/out

  # Deployment job
  deploy:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
