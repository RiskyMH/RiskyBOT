name: Deploy commands to Discord
on:
  workflow_run:
    workflows: ["Run Tests"]
    types: 
      - completed
    branches:
      - main

jobs:
  deploy:
    if: ${{ github.repository_owner == 'RiskyMH' }} && ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Deploy

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install node.js v16
        uses: actions/setup-node@v3
        with:
          node-version: 'current'
          registry-url: https://registry.npmjs.org/
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn --immutable

      - name: Turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo${{ github.ref_name }}-


      # Should be fast as this is requiring the ts build to succeed (and thus having cache)
      - name: Run Build
        run: yarn turbo run build:ci --cache-dir=".turbo" && yarn tsc --build

      - name: Deploy
        run: yarn deployCommands
        env:
          APPLICATION_TOKEN: ${{ secrets.APPLICATION_TOKEN }}
          APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
          APPLICATION_OAUTH_SECRET: ${{ secrets.APPLICATION_OAUTH_SECRET }}
          APPLICATION_BEARER_TOKEN: ${{ secrets.APPLICATION_BEARER_TOKEN }}
      
      - name: Deploy ownerOnly
        run: yarn deployCommands:ownerOnly
        env:
          APPLICATION_TOKEN: ${{ secrets.APPLICATION_TOKEN }}
          APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
          APPLICATION_OAUTH_SECRET: ${{ secrets.APPLICATION_OAUTH_SECRET }}
          APPLICATION_BEARER_TOKEN: ${{ secrets.APPLICATION_BEARER_TOKEN }}
          OWNER_GUILD_ID: ${{ secrets.OWNER_GUILD_ID }}
          
      - name: Deploy imgen
        run: yarn deployCommands:imgen
        env:
          IMGEN_APPLICATION_TOKEN: ${{ secrets.IMGEN_APPLICATION_TOKEN }}
          IMGEN_APPLICATION_ID: ${{ secrets.IMGEN_APPLICATION_ID }}
          IMGEN_APPLICATION_OAUTH_SECRET: ${{ secrets.IMGEN_APPLICATION_OAUTH_SECRET }}
          IMGEN_APPLICATION_BEARER_TOKEN: ${{ secrets.IMGEN_APPLICATION_BEARER_TOKEN }}

